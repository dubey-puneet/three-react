[{"/Users/mukesh/Desktop/project/web/again-react/src/index.js":"1","/Users/mukesh/Desktop/project/web/again-react/src/history.js":"2","/Users/mukesh/Desktop/project/web/again-react/src/App.js":"3","/Users/mukesh/Desktop/project/web/again-react/src/config/lang.js":"4","/Users/mukesh/Desktop/project/web/again-react/src/utils/redux/store.js":"5","/Users/mukesh/Desktop/project/web/again-react/src/AppRoutes.js":"6","/Users/mukesh/Desktop/project/web/again-react/src/layout/Footer.js":"7","/Users/mukesh/Desktop/project/web/again-react/src/utils/redux/root-reducer.js":"8","/Users/mukesh/Desktop/project/web/again-react/src/components/Spinner.js":"9","/Users/mukesh/Desktop/project/web/again-react/src/pages/Uploadfile.js":"10","/Users/mukesh/Desktop/project/web/again-react/src/pages/Login.js":"11","/Users/mukesh/Desktop/project/web/again-react/src/pages/Error404.js":"12","/Users/mukesh/Desktop/project/web/again-react/src/pages/Tickets.js":"13","/Users/mukesh/Desktop/project/web/again-react/src/utils/redux/user/user.action.js":"14","/Users/mukesh/Desktop/project/web/again-react/src/utils/redux/user/user.reducer.js":"15","/Users/mukesh/Desktop/project/web/again-react/src/layout/Header.js":"16","/Users/mukesh/Desktop/project/web/again-react/src/components/Search.js":"17","/Users/mukesh/Desktop/project/web/again-react/src/components/CalendarDate1.js":"18","/Users/mukesh/Desktop/project/web/again-react/src/components/TicketsModal.js":"19","/Users/mukesh/Desktop/project/web/again-react/src/data/filterBody.js":"20","/Users/mukesh/Desktop/project/web/again-react/src/utils/redux/utils/actions.type.js":"21","/Users/mukesh/Desktop/project/web/again-react/src/components/CalendarDate.js":"22","/Users/mukesh/Desktop/project/web/again-react/src/components/CalendarTime.js":"23","/Users/mukesh/Desktop/project/web/again-react/src/data/variables.js":"24"},{"size":591,"mtime":1624951890000,"results":"25","hashOfConfig":"26"},{"size":88,"mtime":1624951890000,"results":"27","hashOfConfig":"26"},{"size":1323,"mtime":1624951890000,"results":"28","hashOfConfig":"26"},{"size":445,"mtime":1624951890000,"results":"29","hashOfConfig":"26"},{"size":407,"mtime":1624965829000,"results":"30","hashOfConfig":"26"},{"size":1128,"mtime":1624951890000,"results":"31","hashOfConfig":"26"},{"size":1001,"mtime":1624951890000,"results":"32","hashOfConfig":"26"},{"size":377,"mtime":1624951890000,"results":"33","hashOfConfig":"26"},{"size":270,"mtime":1624951890000,"results":"34","hashOfConfig":"26"},{"size":3926,"mtime":1624951890000,"results":"35","hashOfConfig":"26"},{"size":3526,"mtime":1624951890000,"results":"36","hashOfConfig":"26"},{"size":1169,"mtime":1624951890000,"results":"37","hashOfConfig":"26"},{"size":10117,"mtime":1624966378000,"results":"38","hashOfConfig":"26"},{"size":1524,"mtime":1624966667000,"results":"39","hashOfConfig":"26"},{"size":746,"mtime":1624963875000,"results":"40","hashOfConfig":"26"},{"size":2155,"mtime":1624951890000,"results":"41","hashOfConfig":"26"},{"size":4115,"mtime":1624951890000,"results":"42","hashOfConfig":"26"},{"size":1294,"mtime":1624951890000,"results":"43","hashOfConfig":"26"},{"size":12894,"mtime":1624969408000,"results":"44","hashOfConfig":"26"},{"size":1327,"mtime":1624951890000,"results":"45","hashOfConfig":"26"},{"size":258,"mtime":1624963708000,"results":"46","hashOfConfig":"26"},{"size":1040,"mtime":1624951890000,"results":"47","hashOfConfig":"26"},{"size":2108,"mtime":1624951890000,"results":"48","hashOfConfig":"26"},{"size":421,"mtime":1624951890000,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lh4s26",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mukesh/Desktop/project/web/again-react/src/index.js",[],"/Users/mukesh/Desktop/project/web/again-react/src/history.js",[],"/Users/mukesh/Desktop/project/web/again-react/src/App.js",[],"/Users/mukesh/Desktop/project/web/again-react/src/config/lang.js",[],"/Users/mukesh/Desktop/project/web/again-react/src/utils/redux/store.js",[],"/Users/mukesh/Desktop/project/web/again-react/src/AppRoutes.js",[],"/Users/mukesh/Desktop/project/web/again-react/src/layout/Footer.js",[],"/Users/mukesh/Desktop/project/web/again-react/src/utils/redux/root-reducer.js",[],"/Users/mukesh/Desktop/project/web/again-react/src/components/Spinner.js",[],"/Users/mukesh/Desktop/project/web/again-react/src/pages/Uploadfile.js",[],"/Users/mukesh/Desktop/project/web/again-react/src/pages/Login.js",[],"/Users/mukesh/Desktop/project/web/again-react/src/pages/Error404.js",[],"/Users/mukesh/Desktop/project/web/again-react/src/pages/Tickets.js",[],"/Users/mukesh/Desktop/project/web/again-react/src/utils/redux/user/user.action.js",[],"/Users/mukesh/Desktop/project/web/again-react/src/utils/redux/user/user.reducer.js",[],"/Users/mukesh/Desktop/project/web/again-react/src/layout/Header.js",[],"/Users/mukesh/Desktop/project/web/again-react/src/components/Search.js",[],"/Users/mukesh/Desktop/project/web/again-react/src/components/CalendarDate1.js",[],"/Users/mukesh/Desktop/project/web/again-react/src/components/TicketsModal.js",["99"],"import React, { Component } from \"react\"\nimport { Modal, InputGroup, FormControl } from \"react-bootstrap\"\nimport { FiX, FiCalendar } from \"react-icons/fi\"\n\nimport CalendarTime from \"../components/CalendarTime\"\nimport CalendarDate from \"../components/CalendarDate\"\n\nimport { connect } from \"react-redux\"\nimport { updateTicketForm, updateTicketFormControls } from \"./../utils/redux/user/user.action\";\n\nimport \"../assets/styles/_tickets.scss\"\nimport \"../assets/styles/_ticketsmodal.scss\"\n\nconst inputFields = [\n  {\n    label: \"Active client in Kedem\",\n    name: \"Active client in Kedem\",\n  },\n  {\n    label: \"Actual premia\",\n    name: \"Actual premia\",\n  },\n  {\n    label: \"Company\",\n    name: \"Company\",\n  },\n  {\n    label: \"Date of insurance\",\n    name: \"Date of insurance\",\n    type: 'datetime'\n  },\n  {\n    label: \"Date of status check\",\n    name: \"Date of status check\",\n    type: 'datetime'\n  },\n  {\n    label: \"Fast start\",\n    name: \"Fast start\",\n  },\n  {\n    label: \"First payment\",\n    name: \"First payment\",\n  },\n  {\n    label: \"Free notes\",\n    name: \"Free notes\",\n  },\n  {\n    label: \"Full name\",\n    name: \"Full name\",\n  },\n  {\n    label: \"Number of polisa\",\n    name: \"Number of polisa\",\n  },\n  {\n    label: \"Outer cancelation\",\n    name: \"Outer cancelation\",\n  },\n  {\n    label: \"Payment after 3 months\",\n    name: \"Payment after 3 months\",\n  },\n  {\n    label: \"Payment after year\",\n    name: \"Payment after year\",\n  },\n  {\n    label: \"Pending notes\",\n    name: \"Pending notes\",\n  },\n  {\n    label: \"Phone meeting\",\n    name: \"Phone meeting\",\n  },\n  {\n    label: \"Polica type\",\n    name: \"Polica type\",\n  },\n  {\n    label: \"Polisa num\",\n    name: \"Polisa num\"\n  },\n  {\n    label: \"Product name to goals\",\n    name: \"Product name to goals\"\n  },\n  {\n    label: \"Sent date\",\n    name: \"Sent date\"\n  },\n  {\n    label: \"Sent to insurance companies\",\n    name: \"Sent to insurance companies\",\n    type: 'datetime'\n  },\n  {\n    label: \"Suggestion premia\",\n    name: \"Suggestion premia\"\n  },\n  {\n    label: \"Twisting tag\",\n    name: \"Twisting tag\"\n  },\n  {\n    label: \"agent\",\n    name: \"agent\"\n  },\n  {\n    label: \"agent number\",\n    name: \"agent number\"\n  },\n  {\n    label: \"insurance company\",\n    name: \"insurance company\"\n  },\n  {\n    label: \"partner id\",\n    name: \"partner id\"\n  },\n  {\n    label: \"partner name\",\n    name: \"partner name\"\n  },\n  {\n    label: \"program name\",\n    name: \"program name\"\n  },\n  {\n    label: \"start of insurance\",\n    name: \"start of insurance\",\n    type: 'datetime'\n  },\n  {\n    label: \"submission date\",\n    name: \"submission date\",\n    type: 'datetime'\n  },\n  {\n    label: \"submission month\",\n    name: \"submission month\"\n  }\n];\n\n\nexport class TicketsModal extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      selectDateTime: \"\",\n      showCalendarTime: false,\n      \n      calender: {},\n\n      selectDate: \"\",\n      showCalendar: false,\n\n      formData: props.data,\n\n       // Controls\n       documentId: 'Details',\n       displayName: 'Details',\n       isSimple: true,\n       documentType: 'div',\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    console.log({nextProps});\n    this.setState({\n      formData: nextProps.data\n    })\n  }\n\n\n  setStrSearch = (obj) => {\n    console.log(obj);\n    this.setState(obj)\n  }\n\n  handleChange = (event) => {\n    const {target: {name, value}} = event;\n    console.log(name, value);\n    this.setState({\n      formData : {\n        ...this.state.formData,\n        [name]: value\n      }\n    })\n  }\n\n  handleDatePicker = (name, calObj) => {\n    this.setState({\n      calender: {\n        ...this.state.calender,\n        [name]: !this.state.calender[name]\n      },\n      formData : {\n        ...this.state.formData,\n        [name]: calObj.selectDateTime\n      }\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.submitForm(this.props.token, this.props.data[\"Id number\"], this.state.formData);\n  }\n\n  handleSaveControlls = (e) => {\n    e.preventDefault();\n\n    const formElements = document.querySelector('#form').children\n    // console.log(formElements[8].firstChild.textContent)\n    const {documentId, isSimple, documentType, displayName} = this.state\n\n    // Preparing the data\n    const data = {\n      controls: {\n        0: {\n          controls: [\n            {\n              controls: [\n                {\n                  context: \"datetime\",\n                  displayName: \"datetime\",\n                  id: \"id.datetime\",\n                  isSimple: false,\n                  type: \"input\"\n                }\n              ],\n              displayName: formElements[0].firstChild.textContent,\n              id: formElements[0].children[1].children[1].id,\n              isSimple,\n              type: formElements[0].localName\n            },\n            {\n              controls: [\n                {\n                  context: \"status\",\n                  displayName: \"status\",\n                  id: \"id.status\",\n                  isSimple: false,\n                  type: \"input\"\n                }\n              ],\n              displayName: formElements[1].firstChild.textContent,\n              id: formElements[1].children[1].id,\n              isSimple,\n              type: formElements[1].localName\n            },\n            {\n              controls: [\n                {\n                  context: \"idNumber\",\n                  displayName: \"idNumber\",\n                  id: \"id.idNumber\",\n                  isSimple: false,\n                  type: \"input\"\n                }\n              ],\n              displayName: formElements[2].firstChild.textContent,\n              id: formElements[2].children[1].id,\n              isSimple,\n              type: formElements[2].localName\n            },\n            {\n              controls: [\n                {\n                  context: \"firstName\",\n                  displayName: \"firstName\",\n                  id: \"id.firstName\",\n                  isSimple: false,\n                  type: \"input\"\n                }\n              ],\n              displayName: formElements[3].firstChild.textContent,\n              id: formElements[3].children[1].id,\n              isSimple,\n              type: formElements[3].localName\n            },\n            {\n              controls: [\n                {\n                  context: \"lastName\",\n                  displayName: \"lastName\",\n                  id: \"id.lastName\",\n                  isSimple: false,\n                  type: \"input\"\n                }\n              ],\n              displayName: formElements[4].firstChild.textContent,\n              id: formElements[4].children[1].id,\n              isSimple,\n              type: formElements[4].localName\n            },\n            {\n              controls: [\n                {\n                  context: \"rejects\",\n                  displayName: \"rejects\",\n                  id: \"id.rejects\",\n                  isSimple: false,\n                  type: \"input\"\n                }\n              ],\n              displayName: formElements[5].firstChild.textContent,\n              id: formElements[5].children[1].id,\n              isSimple,\n              type: formElements[5].localName\n            },\n            {\n              controls: [\n                {\n                  context: \"date\",\n                  displayName: \"date\",\n                  id: \"id.date\",\n                  isSimple: false,\n                  type: \"input\"\n                }\n              ],\n              displayName: formElements[6].firstChild.textContent,\n              id: formElements[6].children[1].children[1].id,\n              isSimple,\n              type: formElements[6].localName\n            },\n            {\n              controls: [\n                {\n                  context: \"premia\",\n                  displayName: \"premia\",\n                  id: \"id.premia\",\n                  isSimple: false,\n                  type: \"input\"\n                }\n              ],\n              displayName: formElements[7].firstChild.textContent,\n              id: formElements[7].children[1].id,\n              isSimple,\n              type: formElements[7].localName\n            },\n          ],\n          id: documentId,\n          displayName,\n          isSimple,\n          type: documentType\n        },\n        1: {\n          controls: [\n            {\n              controls: [\n                {\n                  actionName: formElements[8].firstChild.textContent,\n                  displayName: formElements[8].firstChild.textContent,\n                  id: formElements[8].firstChild.id,\n                  type: formElements[8].firstChild.nodeName.toLocaleLowerCase(),\n                  isButton: false,\n                  isSimple: false,\n                }\n              ],\n              displayName: \"\",\n              id: `${formElements[8].id}_${formElements[8].firstChild.id}`,\n              isSimple,\n              type: formElements[8].localName\n            },\n            {\n              controls: [\n                {\n                  actionName: formElements[8].children[1].textContent,\n                  displayName: formElements[8].children[1].textContent,\n                  id: formElements[8].children[1].id,\n                  type: formElements[8].children[1].nodeName.toLocaleLowerCase(),\n                  isButton: false,\n                  isSimple: false,\n                }\n              ],\n              displayName: \"\",\n              id: `${formElements[8].id}_${formElements[8].children[1].id}`,\n              isSimple,\n              type: formElements[8].localName\n            }\n          ],\n          id: formElements[8].id,\n          displayName: 'Save',\n          isSimple,\n          type: formElements[8].localName\n        }\n      }\n    }\n\n    this.props.submitFormControls(this.props.token, this.props.data[\"Id number\"], data);\n  }\n\n  render() {\n\n    const { isAdmin } = this.props;\n\n    const fields = (input) => {\n\n      const { type } = input;\n      if (type === undefined) {\n        return (\n          <div className=\"item\">\n            <label>{input.label}</label>\n            <input type=\"text\" disabled={!isAdmin}   name={input.name} onChange={this.handleChange}  value={this.state.formData[input.label]} />\n          </div>\n        )\n      } \n      else if (type === \"datetime\") {\n        return (\n          <div className=\"item\">\n              <label>Acceptance Date</label>\n              <InputGroup>\n                <InputGroup.Prepend>\n                  <InputGroup.Text id=\"basic-addon1\">\n                    <FiCalendar size={16} color=\"#061129\" />\n                  </InputGroup.Text>\n                </InputGroup.Prepend>\n                <FormControl\n                  disabled={!isAdmin} \n                  value={this.state.formData[input.label]}\n                  placeholder=\"dd/mm/yyyy HH:mm\"\n                  aria-describedby=\"basic-addon1\"\n                  name={input.name} \n                  onClick={() =>\n                    this.setState({\n                      calender: {\n                        ...this.state.calender,\n                        [input.name]: !this.state.calender[input.name]\n                      }\n                    })\n                  }\n                />\n\n                {this.state.calender[input.name] && (\n                  <CalendarTime handle={(obj) => this.handleDatePicker(input.name, obj) } param=\"Select\" />\n                )}\n              </InputGroup>\n            </div>\n        )\n      }\n      \n    }\n\n    const formFields = (field) => field.map((item, index) =>  fields(item));\n\n\n    return (\n      <div>\n        <Modal\n          show={this.props.showModal}\n          onHide={() => this.props.handle(false)}\n        >\n          <Modal.Header>\n            <FiX\n              color=\"#061129\"\n              size={17}\n              onClick={() => this.props.handle(false)}\n            />\n            <Modal.Title>Details</Modal.Title>\n          </Modal.Header>\n          <Modal.Body id=\"form\">\n            {formFields(inputFields)}\n            \n            <div style={{ textAlign: \"center\", display: \"flex\" }} id=\"actions\">\n              <span className=\"btn\" id=\"btn-1\" onClick={this.handleSubmit}>\n                Save\n              </span>\n\n              {/* Extra button */}\n              <span className=\"btn btn-2\" id=\"btn-2\" onClick={this.handleSaveControlls}>\n                Save Controls\n              </span>\n            </div>\n          </Modal.Body>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  error: state.user.error,\n  response: state.user.response,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  submitForm: (token, id, data) => dispatch(updateTicketForm(token, id, data)),\n  submitFormControls: (token, id, data) => dispatch(updateTicketFormControls(token, id, data)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TicketsModal);\n\n// export default TicketsModal\n","/Users/mukesh/Desktop/project/web/again-react/src/data/filterBody.js",[],"/Users/mukesh/Desktop/project/web/again-react/src/utils/redux/utils/actions.type.js",[],"/Users/mukesh/Desktop/project/web/again-react/src/components/CalendarDate.js",[],"/Users/mukesh/Desktop/project/web/again-react/src/components/CalendarTime.js",[],"/Users/mukesh/Desktop/project/web/again-react/src/data/variables.js",[],{"ruleId":"100","severity":1,"message":"101","line":6,"column":8,"nodeType":"102","messageId":"103","endLine":6,"endColumn":20},"no-unused-vars","'CalendarDate' is defined but never used.","Identifier","unusedVar"]